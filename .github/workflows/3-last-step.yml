name: Step 3 # Last step of the exercise

on:
  pull_request:
    types: [opened, reopened, closed]
  workflow_dispatch:

permissions:
  contents: write
  actions: write
  issues: write
  pull-requests: write

env:
  REVIEW_FILE: ".github/steps/x-review.md"

jobs:
  find_exercise:
    name: Find Exercise Issue
    uses: skills/exercise-toolkit/.github/workflows/find-exercise-issue.yml@v0.7.1

  # Quand la PR s'ouvre, poster un coaching
  on-opened:
    if: github.event_name == 'pull_request' && (github.event.action == 'opened' || github.event.action == 'reopened')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Comment on the PR
        uses: GrantBirki/comment@v2.1.1
        with:
          repository: ${{ github.repository }}
          issue-number: ${{ github.event.pull_request.number }}
          file: .github/steps/3-step.md

  post_review_content:
    name: Post review content
    needs: [find_exercise]
    runs-on: ubuntu-latest
    env:
      ISSUE_REPOSITORY: ${{ github.repository }}
      ISSUE_NUMBER: ${{ needs.find_exercise.outputs.issue-number }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create comment - step finished - final review next
        uses: GrantBirki/comment@v2.1.1
        with:
          repository: ${{ env.ISSUE_REPOSITORY }}
          issue-number: ${{ env.ISSUE_NUMBER }}
          file: .github/i18n/fr/lesson-review.md

      - name: Create comment - add review content
        uses: GrantBirki/comment@v2.1.1
        with:
          repository: ${{ env.ISSUE_REPOSITORY }}
          issue-number: ${{ env.ISSUE_NUMBER }}
          file: ${{ env.REVIEW_FILE }}

      - name: Disable current workflow
        run: gh workflow disable "${{ github.workflow }}"
        env:
          GH_TOKEN: ${{ github.token }}

  finish_exercise:
    name: Finish Exercise
    needs: [find_exercise, post_review_content]
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
    uses: skills/exercise-toolkit/.github/workflows/finish-exercise.yml@v0.7.1
    with:
      issue-url: ${{ needs.find_exercise.outputs.issue-url }}
      exercise-title: "GitHub Basics"
      update-readme-with-congratulations: false

  finalize_fr:
    name: Finalize FR
    needs: [find_exercise, post_review_content, finish_exercise]
    runs-on: ubuntu-latest
    env:
      ISSUE_NUMBER: ${{ needs.find_exercise.outputs.issue-number }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Construire bloc de f√©licitations FR
        id: build-congrats
        uses: skills/action-text-variables@v3
        with:
          template-file: .github/i18n/fr/readme-congrats.md
          template-vars: |
            title: "GitHub Basics"
            login: ${{ github.actor }}

      - name: Pr√©prend le bloc FR au README
        run: |
          printf "%s\n\n%s\n" "$CONGRATS" "$(cat README.md)" > README.md.new
          mv README.md.new README.md
        env:
          CONGRATS: ${{ steps.build-congrats.outputs.updated-text }}

      - name: Commit README.md
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "docs(readme): f√©licitations finales en fran√ßais"
          file_pattern: README.md

      - name: Commentaire final en fran√ßais
        uses: actions/github-script@v7
        env:
          ISSUE_NUMBER: ${{ env.ISSUE_NUMBER }}
        with:
          script: |
            const {owner, repo} = context.repo;
            await github.rest.issues.createComment({
              owner, repo, issue_number: Number(process.env.ISSUE_NUMBER),
              body: [
                `üéâ F√©licitations @${context.actor} tu as termin√© l‚Äôexercice **GitHub Basics**.`,
                `Le README a √©t√© mis √† jour avec un message final en fran√ßais.`
              ].join('\n\n')
            });
